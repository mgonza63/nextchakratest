import Navbar from "../../components/Navbar";
import Head from "next/head";
import { useRouter } from "next/router";
import useSWR from "swr";
import {
  Container,
  Grid,
  GridItem,
  Text,
  Image,
  AspectRatio,
  Divider,
  Stat,
  StatLabel,
  StatNumber,
  StatGroup,
} from "@chakra-ui/react";
import Footer from "../../components/Footer";
import UnitContact from "../../components/UnitContact"
import Lightbox from "../../components/Lightbox";
import { MinusIcon } from "@chakra-ui/icons";
const fetcher = async (url) => {
  const res = await fetch(url);
  const data = await res.json();

  if (res.status !== 200) {
    throw new Error(data.message);
  }
  return data;
};

export default function Person() {
  const { query } = useRouter();
  const { data, error } = useSWR(
    () => query.id && `/api/properties/${query.id}`,
    fetcher
  );

  if (error) return <div>{error.message}</div>;
  if (!data) return <div>Loading...</div>;

  return (
    <div>
      <Head>
        <title>{data.propertyName}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Navbar />
      <Container maxW="container.xl" my="1em">
        {data.thumbnail ? <img src={data.thumbnail} /> : <div>No Image</div>}
        <Grid
          templateColumns={{ base: "repeat(1, 1fr)", md: "repeat(4, 1fr)" }}
          gap={5}
          py="2em"
        >
          {data.images.map((image) => (
            <AspectRatio>
              <Image src={image} />
            </AspectRatio>
          ))}
          <Lightbox gallery={data.images} />
        </Grid>

        <Grid
          templateColumns={{ base: "repeat(1, 1fr)", md: "repeat(2, 1fr)" }}
          gap={6}
          py="2em"
        >
          <GridItem>
            <Text fontSize="4xl" fontWeight="bold">
              {data.propertyName}
            </Text>
            <Text color="gray.500" fontWeight="semibold">
              {data.location}
            </Text>
            <Text maxW="500px" my="1em" fontSize="lg">
              {data.description}
              <Divider pb="1em" />

            </Text>
            {/* <Center height="50px">
              <Divider orientation="vertical" />
            </Center> */}
            <StatGroup>
            <Stat pb="1em">
                <StatLabel>Building Size</StatLabel>
                <StatNumber>{data.buildingSize ? data.buildingSize : <MinusIcon />}</StatNumber>
              </Stat>
              <Stat>
                <StatLabel>Year Built</StatLabel>
                <StatNumber>{data.yearBuilt ? data.yearBuilt : <MinusIcon />}</StatNumber>
              </Stat>
            </StatGroup>
            <StatGroup>
            <Stat>
                <StatLabel>Property Type</StatLabel>
                <StatNumber>{data.propertyType ? data.propertyType : <MinusIcon />}</StatNumber>
              </Stat>
              <Stat>
                <StatLabel>Retail Space Status</StatLabel>
                <StatNumber>{data.retailStatus ? data.retailStatus : <MinusIcon />}</StatNumber>
              </Stat>
            </StatGroup>
          </GridItem>
          
          <AspectRatio>
            <iframe src={`${data.map}`} width="100%" height="350vw"></iframe>
          </AspectRatio>
          <UnitContact unitName={data.propertyName}/>

        </Grid>
      </Container>
      <Footer />
    </div>
  );
}
